                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f48004000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f6d803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7a003000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx
0x03c: 72b401000000000000   | 	jl L0H7			
0x045:                      | LoopMR:        
0x045: 50870000000000000000 |     mrmovq (%rdi), %r8
0x04f: 50970800000000000000 |     mrmovq 8(%rdi), %r9
0x059: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x063: 50b71800000000000000 |     mrmovq 24(%rdi), %r11
0x06d: 50c72000000000000000 |     mrmovq 32(%rdi), %r12
0x077: 50d72800000000000000 |     mrmovq 40(%rdi), %r13
0x081: 50e73000000000000000 |     mrmovq 48(%rdi), %r14
0x08b: 50373800000000000000 |     mrmovq 56(%rdi), %rbx
0x095:                      | RM1:
0x095: 6288                 | 	andq %r8, %r8
0x097: 40860000000000000000 |     rmmovq %r8, (%rsi)
0x0a1: 71b400000000000000   |     jle RM2
0x0aa: c0f00100000000000000 |     iaddq $1, %rax
0x0b4:                      | RM2:
0x0b4: 6299                 | 	andq %r9, %r9
0x0b6: 40960800000000000000 |     rmmovq %r9, 8(%rsi)
0x0c0: 71d300000000000000   |     jle RM3
0x0c9: c0f00100000000000000 |     iaddq $1, %rax
0x0d3:                      | RM3:
0x0d3: 62aa                 | 	andq %r10, %r10
0x0d5: 40a61000000000000000 |     rmmovq %r10, 16(%rsi)
0x0df: 71f200000000000000   |     jle RM4
0x0e8: c0f00100000000000000 |     iaddq $1, %rax
0x0f2:                      | RM4:
0x0f2: 62bb                 | 	andq %r11, %r11
0x0f4: 40b61800000000000000 |     rmmovq %r11, 24(%rsi)
0x0fe: 711101000000000000   |     jle RM5
0x107: c0f00100000000000000 |     iaddq $1, %rax
0x111:                      | RM5:   
0x111: 62cc                 | 	andq %r12, %r12
0x113: 40c62000000000000000 |     rmmovq %r12, 32(%rsi)
0x11d: 713001000000000000   |     jle RM6
0x126: c0f00100000000000000 |     iaddq $1, %rax
0x130:                      | RM6:   
0x130: 62dd                 | 	andq %r13, %r13
0x132: 40d62800000000000000 |     rmmovq %r13, 40(%rsi)
0x13c: 714f01000000000000   |     jle RM7
0x145: c0f00100000000000000 |     iaddq $1, %rax
0x14f:                      | RM7:
0x14f: 62ee                 | 	andq %r14, %r14
0x151: 40e63000000000000000 |     rmmovq %r14, 48(%rsi)
0x15b: 716e01000000000000   |     jle RM8
0x164: c0f00100000000000000 |     iaddq $1, %rax
0x16e:                      | RM8:
0x16e: 6233                 | 	andq %rbx, %rbx
0x170: 40363800000000000000 |     rmmovq %rbx, 56(%rsi)
0x17a: 718d01000000000000   |     jle Npos
0x183: c0f00100000000000000 |     iaddq $1, %rax
0x18d:                      | Npos:
0x18d: c0f74000000000000000 | 	iaddq $64, %rdi
0x197: c0f64000000000000000 |     iaddq $64, %rsi
0x1a1: c0f2f8ffffffffffffff |     iaddq $-8, %rdx   
0x1ab: 754500000000000000   |     jge LoopMR
0x1b4:                      | L0H7:
0x1b4: c0f20300000000000000 |     iaddq $3, %rdx
0x1be: 72e301000000000000   | 	jl L0H4              
0x1c7: 766002000000000000   |     jg L6H7 
0x1d0: 50872000000000000000 |     mrmovq 32(%rdi), %r8
0x1da: 73d902000000000000   |     je Step5           
0x1e3:                      | L0H4:
0x1e3: c0f20300000000000000 |     iaddq $3, %rdx
0x1ed: 724202000000000000   |     jl L0H1
0x1f6: 761202000000000000   |     jg L3H4
0x1ff: 50870800000000000000 |     mrmovq 8(%rdi), %r8
0x209: 735403000000000000   |     je Step2
0x212:                      | L3H4:
0x212: c0f2ffffffffffffffff |     iaddq $-1, %rdx
0x21c: 50871000000000000000 |     mrmovq 16(%rdi), %r8
0x226: 732b03000000000000   |     je Step3
0x22f: 50871800000000000000 |     mrmovq 24(%rdi), %r8
0x239: 700203000000000000   |     jmp Step4
0x242:                      | L0H1:
0x242: c0f20100000000000000 |     iaddq $1, %rdx
0x24c: 50870000000000000000 |     mrmovq (%rdi), %r8
0x256: 737d03000000000000   |     je Step1
0x25f: 90                   |     ret
0x260:                      | L6H7:
0x260: c0f2ffffffffffffffff |     iaddq $-1, %rdx
0x26a: 50872800000000000000 |     mrmovq 40(%rdi), %r8
0x274: 73b002000000000000   |     je Step6
0x27d: 50873000000000000000 |     mrmovq 48(%rdi), %r8
0x287:                      | Step7:
0x287: 6288                 |     andq %r8, %r8
0x289: 40863000000000000000 |     rmmovq %r8, 48(%rsi)
0x293: 50872800000000000000 |     mrmovq 40(%rdi), %r8
0x29d: 71b002000000000000   |     jle Step6
0x2a6: c0f00100000000000000 |     iaddq $1, %rax
0x2b0:                      | Step6:
0x2b0: 6288                 |     andq %r8, %r8
0x2b2: 40862800000000000000 |     rmmovq %r8, 40(%rsi)
0x2bc: 50872000000000000000 |     mrmovq 32(%rdi), %r8
0x2c6: 71d902000000000000   |     jle Step5
0x2cf: c0f00100000000000000 |     iaddq $1, %rax
0x2d9:                      | Step5:
0x2d9: 6288                 |     andq %r8, %r8
0x2db: 40862000000000000000 |     rmmovq %r8, 32(%rsi)
0x2e5: 50871800000000000000 |     mrmovq 24(%rdi), %r8 
0x2ef: 710203000000000000   |     jle Step4
0x2f8: c0f00100000000000000 |     iaddq $1, %rax
0x302:                      | Step4:
0x302: 6288                 |     andq %r8, %r8
0x304: 40861800000000000000 |     rmmovq %r8, 24(%rsi)
0x30e: 50871000000000000000 |     mrmovq 16(%rdi), %r8
0x318: 712b03000000000000   |     jle Step3
0x321: c0f00100000000000000 |     iaddq $1, %rax
0x32b:                      | Step3:
0x32b: 6288                 |     andq %r8, %r8
0x32d: 40861000000000000000 |     rmmovq %r8, 16(%rsi)
0x337: 50870800000000000000 |     mrmovq 8(%rdi), %r8
0x341: 715403000000000000   |     jle Step2
0x34a: c0f00100000000000000 |     iaddq $1, %rax
0x354:                      | Step2:
0x354: 6288                 |     andq %r8, %r8
0x356: 40860800000000000000 |     rmmovq %r8, 8(%rsi)
0x360: 50870000000000000000 |     mrmovq (%rdi), %r8
0x36a: 717d03000000000000   |     jle Step1
0x373: c0f00100000000000000 |     iaddq $1, %rax
0x37d:                      | Step1:
0x37d: 6288                 |     andq %r8, %r8
0x37f: 40860000000000000000 |     rmmovq %r8, (%rsi)
0x389: 719c03000000000000   |     jle Done
0x392: c0f00100000000000000 |     iaddq $1, %rax
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x39c:                      | Done:
0x39c: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x39d:                      | End:
                            | #/* $end ncopy-ys */
0x39d:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x3a0:                      | 	.align 8
0x3a0:                      | src:
0x3a0: ffffffffffffffff     | 	.quad -1
0x3a8: 0200000000000000     | 	.quad 2
0x3b0: 0300000000000000     | 	.quad 3
0x3b8: fcffffffffffffff     | 	.quad -4
0x3c0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x3d0:                      | 	.align 16
0x3d0:                      | Predest:
0x3d0: fadebc0000000000     | 	.quad 0xbcdefa
0x3d8:                      | dest:
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8:                      | Postdest:
0x3f8: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x400:                      | .align 8
                            | # Run time stack
0x400: 0000000000000000     | 	.quad 0
0x408: 0000000000000000     | 	.quad 0
0x410: 0000000000000000     | 	.quad 0
0x418: 0000000000000000     | 	.quad 0
0x420: 0000000000000000     | 	.quad 0
0x428: 0000000000000000     | 	.quad 0
0x430: 0000000000000000     | 	.quad 0
0x438: 0000000000000000     | 	.quad 0
0x440: 0000000000000000     | 	.quad 0
0x448: 0000000000000000     | 	.quad 0
0x450: 0000000000000000     | 	.quad 0
0x458: 0000000000000000     | 	.quad 0
0x460: 0000000000000000     | 	.quad 0
0x468: 0000000000000000     | 	.quad 0
0x470: 0000000000000000     | 	.quad 0
0x478: 0000000000000000     | 	.quad 0
                            | 
0x480:                      | Stack:
